1. sys 계정으로 oracle developer 접속


2. 테이블 스페이스 생성
CREATE  TABLESPACE TBS_CLOB
 DATAFILE 
 'C:\oradata\TBS_CLOB.DBF' SIZE 256M  AUTOEXTEND ON NEXT 128M MAXSIZE UNLIMITED;

CREATE  TABLESPACE TBS_DATA
 DATAFILE 
 'C:\oradata\TBS_DATA.DBF' SIZE 256M  AUTOEXTEND ON NEXT 128M MAXSIZE UNLIMITED;

CREATE  TABLESPACE TBS_IDX
 DATAFILE 
 'C:\oradata\TBS_IDX.DBF' SIZE 256M  AUTOEXTEND ON NEXT 126M MAXSIZE UNLIMITED;

CREATE  TEMPORARY TABLESPACE TBS_TEMP
 TEMPFILE
 'C:\oradata\TEMP.DBF' SIZE 256M  AUTOEXTEND ON NEXT 128M MAXSIZE UNLIMITED;


3. 계정 생성 및 권한주기
CREATE USER test IDENTIFIED BY "1234"
 DEFAULT TABLESPACE TBS_DATA
 TEMPORARY TABLESPACE TBS_TEMP
 QUOTA UNLIMITED ON TBS_CLOB
 QUOTA UNLIMITED ON TBS_DATA
 QUOTA UNLIMITED ON TBS_IDX;

GRANT CONNECT, Resource TO test ;


4. DBA계정이나 생성한 계정으로 oracle developer 접속


5. 테이블 만들기  

<<<<<<<   SQL   >>>>>>>



/* 사용자 */
CREATE TABLE TB_USER (
 USER_ID NUMBER(8) NOT NULL, /* 사용자ID */
 LOGIN_ID VARCHAR2(15) NOT NULL, /* 로그인ID */
 LOGIN_PW VARCHAR2(15) NOT NULL, /* 로그인PW */
 NAME VARCHAR2(30) NOT NULL, /* 이름 */
 PHONE VARCHAR2(13), /* 핸드폰 */
 EMAIL VARCHAR2(20), /* 이메일 */
 STATUS NUMBER(1) DEFAULT 9 NOT NULL, /* 상태 */
 ROLE VARCHAR2(10) DEFAULT 'USER' NOT NULL, /* 롤 */
 REG_DT DATE DEFAULT SYSDATE NOT NULL /* 등록일 */
);

COMMENT ON TABLE TB_USER IS '사용자';

COMMENT ON COLUMN TB_USER.USER_ID IS '사용자ID';

COMMENT ON COLUMN TB_USER.LOGIN_ID IS '로그인ID';

COMMENT ON COLUMN TB_USER.LOGIN_PW IS '로그인PW';

COMMENT ON COLUMN TB_USER.NAME IS '이름';

COMMENT ON COLUMN TB_USER.PHONE IS '핸드폰';

COMMENT ON COLUMN TB_USER.EMAIL IS '이메일';

COMMENT ON COLUMN TB_USER.STATUS IS 'STATUS(상태)
0 : 대기
3 : IP차단
4 : 탈퇴
5 : 정지
9 : 정상';

COMMENT ON COLUMN TB_USER.ROLE IS 'ROLE(롤)
USER : 사용자
MANAGER : 매니저
ADMIN : 관리자
SUPER_ADMIN : 최고 관리자+';

COMMENT ON COLUMN TB_USER.REG_DT IS '등록일';

CREATE UNIQUE INDEX PK_TB_USER
 ON TB_USER (
  USER_ID ASC
 );

CREATE UNIQUE INDEX UIX_TB_USER
 ON TB_USER (
  LOGIN_ID ASC
 );

ALTER TABLE TB_USER
 ADD
  CONSTRAINT PK_TB_USER
  PRIMARY KEY (
   USER_ID
  );

ALTER TABLE TB_USER
 ADD
  CONSTRAINT UK_TB_USER
  UNIQUE (
   LOGIN_ID
  );

/* 통합맵 */
CREATE TABLE TB_BOARD_MAP (
 MAP_ID NUMBER(5) NOT NULL, /* 맵ID */
 MAP_NAME VARCHAR2(30) NOT NULL, /* 맵이름 */
 PAR_MAP_ID NUMBER(5) NOT NULL, /* 순번 */
 MAP_TYPE VARCHAR2(1) NOT NULL, /* 맵타입 */
 DEL_YN VARCHAR2(1) DEFAULT 'N' NOT NULL, /* 삭제여부 */
 COMMENT_YN VARCHAR2(1) DEFAULT 'Y' NOT NULL, /* 댓글여부 */
 FILE_YN VARCHAR2(1) DEFAULT 'Y' NOT NULL, /* 첨부파일여부 */
 REG_DT DATE DEFAULT SYSDATE NOT NULL /* 등록일 */
);

COMMENT ON TABLE TB_BOARD_MAP IS '통합맵';

COMMENT ON COLUMN TB_BOARD_MAP.MAP_ID IS '맵ID';

COMMENT ON COLUMN TB_BOARD_MAP.MAP_NAME IS '맵이름';

COMMENT ON COLUMN TB_BOARD_MAP.PAR_MAP_ID IS '순번';

COMMENT ON COLUMN TB_BOARD_MAP.MAP_TYPE IS '맵타입';

COMMENT ON COLUMN TB_BOARD_MAP.DEL_YN IS '삭제여부';

COMMENT ON COLUMN TB_BOARD_MAP.COMMENT_YN IS '댓글여부';

COMMENT ON COLUMN TB_BOARD_MAP.FILE_YN IS '첨부파일여부';

COMMENT ON COLUMN TB_BOARD_MAP.REG_DT IS '등록일';

CREATE UNIQUE INDEX PK_TB_BOARD_MAP
 ON TB_BOARD_MAP (
  MAP_ID ASC
 );

ALTER TABLE TB_BOARD_MAP
 ADD
  CONSTRAINT PK_TB_BOARD_MAP
  PRIMARY KEY (
   MAP_ID
  );

/* 게시물 */
CREATE TABLE TB_BOARD_DOC (
 DOC_ID NUMBER(8) NOT NULL, /* 게시물ID */
 USER_ID NUMBER(8) NOT NULL, /* 사용자ID */
 MAP_ID NUMBER(5) NOT NULL, /* 맵ID */
 TITLE VARCHAR2(300) NOT NULL, /* 제목 */
 BOARD_CONTENTS CLOB NOT NULL, /* 내용 */
 CNT_READ NUMBER DEFAULT 0 NOT NULL, /* 조회수 */
 REG_DT DATE DEFAULT SYSDATE NOT NULL /* 등록일 */
);

COMMENT ON TABLE TB_BOARD_DOC IS '게시물';

COMMENT ON COLUMN TB_BOARD_DOC.DOC_ID IS '게시물ID';

COMMENT ON COLUMN TB_BOARD_DOC.USER_ID IS '사용자ID';

COMMENT ON COLUMN TB_BOARD_DOC.MAP_ID IS '맵ID';

COMMENT ON COLUMN TB_BOARD_DOC.TITLE IS '제목';

COMMENT ON COLUMN TB_BOARD_DOC.BOARD_CONTENTS IS '내용';

COMMENT ON COLUMN TB_BOARD_DOC.CNT_READ IS '조회수';

COMMENT ON COLUMN TB_BOARD_DOC.REG_DT IS '등록일';

CREATE UNIQUE INDEX PK_TB_BOARD_DOC
 ON TB_BOARD_DOC (
  DOC_ID ASC
 );

ALTER TABLE TB_BOARD_DOC
 ADD
  CONSTRAINT PK_TB_BOARD_DOC
  PRIMARY KEY (
   DOC_ID
  );

/* 첨부파일 */
CREATE TABLE TB_BOARD_FILE (
 DOC_ID NUMBER(8) NOT NULL, /* 게시물ID */
 FILE_SNO NUMBER(2) NOT NULL, /* 첨부파일_SNO */
 ORG_FILE_NAME VARCHAR2(100) NOT NULL, /* ORG_파일명 */
 NEW_FILE_NAME VARCHAR2(100) NOT NULL, /* NEW_파일명 */
 FILE_TYPE VARCHAR2(10), /* 파일타입 */
 FILE_SIZE NUMBER NOT NULL, /* 파일크기 */
 FILE_PATH VARCHAR2(100) NOT NULL, /* 파일경로 */
 FILE_EXT VARCHAR2(10), /* 확장자 */
 REG_DT DATE DEFAULT SYSDATE NOT NULL /* 등록일 */
);

COMMENT ON TABLE TB_BOARD_FILE IS '첨부파일';

COMMENT ON COLUMN TB_BOARD_FILE.DOC_ID IS '게시물ID';

COMMENT ON COLUMN TB_BOARD_FILE.FILE_SNO IS '첨부파일_SNO';

COMMENT ON COLUMN TB_BOARD_FILE.ORG_FILE_NAME IS 'ORG_파일명';

COMMENT ON COLUMN TB_BOARD_FILE.NEW_FILE_NAME IS 'NEW_파일명';

COMMENT ON COLUMN TB_BOARD_FILE.FILE_TYPE IS '파일타입';

COMMENT ON COLUMN TB_BOARD_FILE.FILE_SIZE IS '파일크기';

COMMENT ON COLUMN TB_BOARD_FILE.FILE_PATH IS '파일경로';

COMMENT ON COLUMN TB_BOARD_FILE.FILE_EXT IS '확장자';

COMMENT ON COLUMN TB_BOARD_FILE.REG_DT IS '등록일';

CREATE UNIQUE INDEX PK_TB_BOARD_FILE
 ON TB_BOARD_FILE (
  DOC_ID ASC,
  FILE_SNO ASC
 );

ALTER TABLE TB_BOARD_FILE
 ADD
  CONSTRAINT PK_TB_BOARD_FILE
  PRIMARY KEY (
   DOC_ID,
   FILE_SNO
  );

/* 댓글 */
CREATE TABLE TB_BOARD_COMMENT (
 COMMENT_ID NUMBER NOT NULL, /* 댓글ID */
 DOC_ID NUMBER(8) NOT NULL, /* 게시물ID */
 USER_ID NUMBER(8) NOT NULL, /* 사용자ID */
 COMMENTS VARCHAR2(300) NOT NULL, /* 댓글내용 */
 REG_DT DATE DEFAULT SYSDATE NOT NULL /* 등록일 */
);

COMMENT ON TABLE TB_BOARD_COMMENT IS '댓글';

COMMENT ON COLUMN TB_BOARD_COMMENT.COMMENT_ID IS '댓글ID';

COMMENT ON COLUMN TB_BOARD_COMMENT.DOC_ID IS '게시물ID';

COMMENT ON COLUMN TB_BOARD_COMMENT.USER_ID IS '사용자ID';

COMMENT ON COLUMN TB_BOARD_COMMENT.COMMENTS IS '댓글내용';

COMMENT ON COLUMN TB_BOARD_COMMENT.REG_DT IS '등록일';

CREATE UNIQUE INDEX PK_TB_BOARD_COMMENT
 ON TB_BOARD_COMMENT (
  COMMENT_ID ASC
 );

ALTER TABLE TB_BOARD_COMMENT
 ADD
  CONSTRAINT PK_TB_BOARD_COMMENT
  PRIMARY KEY (
   COMMENT_ID
  );

/* 좋아요 */
CREATE TABLE TB_BOARD_LIKE (
 LIKE_ID NUMBER(8) NOT NULL, /* 좋아요_ID */
 DOC_ID NUMBER(8) NOT NULL, /* 게시물ID */
 USER_ID NUMBER(8) NOT NULL, /* 사용자ID */
 LIKE_YN VARCHAR2(1) DEFAULT 'Y' NOT NULL, /* 좋아요여부 */
 REG_DT DATE DEFAULT SYSDATE NOT NULL /* 등록일 */
);

COMMENT ON TABLE TB_BOARD_LIKE IS '좋아요';

COMMENT ON COLUMN TB_BOARD_LIKE.LIKE_ID IS '좋아요_ID';

COMMENT ON COLUMN TB_BOARD_LIKE.DOC_ID IS '게시물ID';

COMMENT ON COLUMN TB_BOARD_LIKE.USER_ID IS '사용자ID';

COMMENT ON COLUMN TB_BOARD_LIKE.LIKE_YN IS '좋아요여부';

COMMENT ON COLUMN TB_BOARD_LIKE.REG_DT IS '등록일';

CREATE UNIQUE INDEX PK_TB_BOARD_LIKE
 ON TB_BOARD_LIKE (
  LIKE_ID ASC
 );

CREATE UNIQUE INDEX UIX_TB_BOARD_LIKE
 ON TB_BOARD_LIKE (
  USER_ID ASC,
  DOC_ID ASC
 );

ALTER TABLE TB_BOARD_LIKE
 ADD
  CONSTRAINT PK_TB_BOARD_LIKE
  PRIMARY KEY (
   LIKE_ID
  );

ALTER TABLE TB_BOARD_LIKE
 ADD
  CONSTRAINT UK_TB_BOARD_LIKE
  UNIQUE (
   USER_ID,
   DOC_ID
  );

ALTER TABLE TB_BOARD_DOC
 ADD
  CONSTRAINT FK_USER_BOARD_DOC
  FOREIGN KEY (
   USER_ID
  )
  REFERENCES TB_USER (
   USER_ID
  );

ALTER TABLE TB_BOARD_DOC
 ADD
  CONSTRAINT FK_BOARD_MAP_BOARD_DOC
  FOREIGN KEY (
   MAP_ID
  )
  REFERENCES TB_BOARD_MAP (
   MAP_ID
  );

ALTER TABLE TB_BOARD_FILE
 ADD
  CONSTRAINT FK_DOC_FILE
  FOREIGN KEY (
   DOC_ID
  )
  REFERENCES TB_BOARD_DOC (
   DOC_ID
  );

ALTER TABLE TB_BOARD_COMMENT
 ADD
  CONSTRAINT FK_DOC_COMMENT
  FOREIGN KEY (
   DOC_ID
  )
  REFERENCES TB_BOARD_DOC (
   DOC_ID
  );

ALTER TABLE TB_BOARD_COMMENT
 ADD
  CONSTRAINT FK_USER_COMMENT
  FOREIGN KEY (
   USER_ID
  )
  REFERENCES TB_USER (
   USER_ID
  );

ALTER TABLE TB_BOARD_LIKE
 ADD
  CONSTRAINT FK_DOC_BOARD_LIKE
  FOREIGN KEY (
   DOC_ID
  )
  REFERENCES TB_BOARD_DOC (
   DOC_ID
  );

ALTER TABLE TB_BOARD_LIKE
 ADD
  CONSTRAINT FK_USER_BOARD_LIKE
  FOREIGN KEY (
   USER_ID
  )
  REFERENCES TB_USER (
   USER_ID
  );
































-- dtree insert sql문

-- 최상위 폴더(통합게시판)
INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(1, null, '통합게시판', 1, 'F', 'N', 'N', 'N', SYSDATE);

-- 통합게시판 하위 폴더
INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(2, 1, '게시판', 1, 'F', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(3, 1, 'QnA', 2, 'B', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(4, 1, 'FAQ', 3, 'B', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(5, 1, '공지사항', 4, 'B', 'N', 'N', 'N', SYSDATE);


-- 게시판(2) 하위 게시판
INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(6, 2, '자유게시판', 1, 'F', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(7, 2, '사진첩', 2, 'F', 'N', 'N', 'N', SYSDATE);


-- 자유게시판(6) 하위 게시판
INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(8, 6, 'JAVA1기', 1, 'B', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(9 ,6, 'JAVA2기', 2, 'B', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(10 ,6, 'JAVA3기', 3, 'B', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(11 ,6, 'JAVA4기', 4, 'B', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(12 ,6, 'JAVA5기', 5, 'B', 'N', 'N', 'N', SYSDATE);

-- 사진첩(7) 하위 게시판
INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(13, 7, 'JAVA1기', 1, 'P', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(14, 7, 'JAVA2기', 2, 'P', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(15, 7, 'JAVA3기', 3, 'P', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(16, 7, 'JAVA4기', 4, 'P', 'N', 'N', 'N', SYSDATE);

INSERT INTO TB_BOARD_MAP(MAP_ID, PAR_MAP_ID, MAP_NAME, BOARD_ORDER, MAP_TYPE, DEL_YN, COMMENT_YN, FILE_YN, REG_DT)
VALUES(17, 7, 'JAVA5기', 5, 'P', 'N', 'N', 'N', SYSDATE);
commit;